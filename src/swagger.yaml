openapi: '3.0.0'
info:
    title: hmx
    description: An E-commerce API for jogger store
    version: 1.1.0
    contact:
        email: 'subhamsbharadwaz@gmail.com'
        url: 'https://www.github.com/subhamBharadwaz'

servers:
    - url: '{protocol}://{url}/api/{version}'
      description: for local host
      variables:
          version:
              enum:
                  - v1
                  - v2
              default: v1
          url:
              enum:
                  - localhost:4000
              default: localhost:4000
          protocol:
              enum:
                  - http
                  - https
              default: http

components:
    securitySchemes:
        cookieAuth:
            type: apiKey
            in: cookie
            name: token
        BearerAuth:
            type: http
            scheme: bearer

paths:
    /register:
        post:
            tags:
                - User
            summary: register a new user, required fields - firstName, lastName, email, password(must be minimum 8 characters long and contains at least 1 uppercase, 1 lowercase, 1 number and 1 symbol) and photo
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - firstName
                                - lastName
                                - email
                                - password
                                - photo
                            properties:
                                firstName:
                                    type: string
                                    required: true
                                lastName:
                                    type: string,
                                    required: true
                                email:
                                    type: string,
                                    required: true
                                password:
                                    type: string,
                                    required: true
                                photo:
                                    in: formData
                                    description: The uploaded file data
                                    type: file
                                    format: binary
                                    required: true
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    token:
                                        type: string
                400:
                    description: Bad request
                401:
                    description: User already exists
                500:
                    description: Internal server error

    /login:
        post:
            tags:
                - User
            summary: login user, required fields -  email, password
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    type: string,
                                    default: 'one@gmail.com'
                                    required: true
                                password:
                                    type: string,
                                    default: 'Subham12@'
                                    required: true
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    token:
                                        type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /logout:
        get:
            tags:
                - User
            summary: get request to logout the user. Also removes httpOnly cookies
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    token:
                                        type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /forgotpassword:
        post:
            tags:
                - User
            summary: sends an email with link to forgot password. Contains the token for user validation. Public hosted version will not send email to your account. Use your own SMTP details to access this feature on local project
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                            properties:
                                email:
                                    type: string
                                    default: 'example.com'
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    token:
                                        type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /password/reset/:token:
        post:
            tags:
                - User
            summary: Allows user to reset password, validated based on token, send password and confirm password fields
            parameters:
                - name: token
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - password
                                - confirmPassword
                            properties:
                                password:
                                    type: string
                                confirmPassword:
                                    type: string

            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    token:
                                        type: string
                                    message:
                                        type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /userdashboard:
        get:
            tags:
                - User
            summary: Gets all details about logged in user, send token in cookies as named token or send Bearer Auth
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    token:
                                        type: string
                                    user:
                                        type: object
                                        properties:
                                            firstName:
                                                type: string
                                            lastName:
                                                type: string
                                            email:
                                                type: string
                                            role:
                                                type: string
                                            photo:
                                                type: object
                                                properties:
                                                    id:
                                                        type: string
                                                    secure_url:
                                                        type: string
                                            _id:
                                                type: string
                                            createdAt:
                                                type: string
                                            updatedAt:
                                                type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /password/update:
        post:
            tags:
                - User
            summary: User can update their password if the user is logged in. Send currentPassword, newPassword, confirmNewPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - currentPassword
                                - newPassword
                                - confirmNewPassword
                            properties:
                                currentPassword:
                                    type: string
                                newPassword:
                                    type: string
                                confirmNewPassword:
                                    type: string
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    token:
                                        type: string

                400:
                    description: Bad request
                500:
                    description: Internal server error

    /userdashboard/update:
        post:
            tags:
                - User
            summary: User can update the name, emails and photo. Photo is optional
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - firstName
                                - lastName
                                - email
                            properties:
                                firstName:
                                    type: string
                                lastName:
                                    type: string
                                email:
                                    type: string
                                photo:
                                    in: formData
                                    description: The uploaded file data
                                    type: file
                                    format: binary
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    token:
                                        type: string
                                    user:
                                        type: object
                                        properties:
                                            firstName:
                                                type: string
                                            lastName:
                                                type: string
                                            email:
                                                type: string
                                            role:
                                                type: string
                                            photo:
                                                type: object
                                                properties:
                                                    id:
                                                        type: string
                                                    secure_url:
                                                        type: string
                                            _id:
                                                type: string
                                            createdAt:
                                                type: string
                                            updatedAt:
                                                type: string

                400:
                    description: Bad request
                500:
                    description: Internal server error

    /admin/users:
        get:
            tags:
                - Admin
            summary: If user is admin, response will get array of all users
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        firstName:
                                            type: string
                                        lastName:
                                            type: string
                                        email:
                                            type: string
                                        role:
                                            type: string
                                        photo:
                                            type: object
                                            properties:
                                                id:
                                                    type: string
                                                secure_url:
                                                    type: string
                                        _id:
                                            type: string
                                        createdAt:
                                            type: string
                                        updatedAt:
                                            type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /admin/user/{id}:
        get:
            tags:
                - Admin
            summary: If user is admin, response will get details of 1 user
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    firstName:
                                        type: string
                                    lastName:
                                        type: string
                                    email:
                                        type: string
                                    role:
                                        type: string
                                    photo:
                                        type: object
                                        properties:
                                            id:
                                                type: string
                                            secure_url:
                                                type: string
                                    _id:
                                        type: string
                                    createdAt:
                                        type: string
                                    updatedAt:
                                        type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

        put:
            tags:
                - Admin
            summary: If user is admin, he can update mentioned fields in user
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
                - name: firstName
                  in: formData
                  required: true
                  schema:
                      type: string
                - name: lastName
                  in: formData
                  required: true
                  schema:
                      type: string
                - name: email
                  in: formData
                  required: true
                  schema:
                      type: string
                - name: role
                  in: formData
                  required: true
                  schema:
                      type: string
                      enum: [user, admin]
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    user:
                                        type: object
                                        properties:
                                            firstName:
                                                type: string
                                            lastName:
                                                type: string
                                            email:
                                                type: string
                                            role:
                                                type: string
                                            photo:
                                                type: object
                                                properties:
                                                    id:
                                                        type: string
                                                    secure_url:
                                                        type: string
                                            _id:
                                                type: string
                                            createdAt:
                                                type: string
                                            updatedAt:
                                                type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

        delete:
            tags:
                - Admin
            summary: If user is admin, delete the user with given id
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    message:
                                        type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /products:
        get:
            tags:
                - Product
            summary: A simple get request will give you all available products
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    products:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                _id:
                                                    type: string
                                                name:
                                                    type: string
                                                price:
                                                    type: number
                                                description:
                                                    type: string
                                                photos:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: string
                                                            secure_url:
                                                                type: string
                                                category:
                                                    type: string
                                                productType:
                                                    type: string
                                                brand:
                                                    type: string
                                                stock:
                                                    type: number
                                                size:
                                                    type: string
                                                ratings:
                                                    type: number
                                                numberOfReviews:
                                                    type: number
                                                reviews:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: string
                                                            user:
                                                                type: string
                                                            name:
                                                                type: string
                                                            rating:
                                                                type: number
                                                            comment:
                                                                type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /product/{id}:
        get:
            tags:
                - Product
            summary: Get a single product
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    products:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                _id:
                                                    type: string
                                                name:
                                                    type: string
                                                price:
                                                    type: number
                                                description:
                                                    type: string
                                                photos:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: string
                                                            secure_url:
                                                                type: string
                                                category:
                                                    type: string
                                                productType:
                                                    type: string
                                                brand:
                                                    type: string
                                                stock:
                                                    type: number
                                                size:
                                                    type: string
                                                ratings:
                                                    type: number
                                                numberOfReviews:
                                                    type: number
                                                reviews:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: string
                                                            user:
                                                                type: string
                                                            name:
                                                                type: string
                                                            rating:
                                                                type: number
                                                            comment:
                                                                type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /admin/products:
        get:
            tags:
                - Admin
            summary: If admin, will give you all available products
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    products:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                _id:
                                                    type: string
                                                name:
                                                    type: string
                                                price:
                                                    type: number
                                                description:
                                                    type: string
                                                photos:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: string
                                                            secure_url:
                                                                type: string
                                                category:
                                                    type: string
                                                productType:
                                                    type: string
                                                brand:
                                                    type: string
                                                stock:
                                                    type: number
                                                size:
                                                    type: string
                                                ratings:
                                                    type: number
                                                numberOfReviews:
                                                    type: number
                                                reviews:
                                                    type: array
                                                    items:
                                                        type: object
                                                        properties:
                                                            id:
                                                                type: string
                                                            user:
                                                                type: string
                                                            name:
                                                                type: string
                                                            rating:
                                                                type: number
                                                            comment:
                                                                type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /admin/product/add:
        post:
            tags:
                - Admin
            summary: If admin, Add a product
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - name
                                - price
                                - description
                                - category
                                - productType
                                - brand
                                - size
                                - photos
                            properties:
                                name:
                                    type: string
                                    required: true
                                price:
                                    type: number
                                    required: true
                                description:
                                    type: string
                                    required: true
                                photos:
                                    in: formData
                                    description: The uploaded photos
                                    type: file
                                    format: binary
                                category:
                                    type: string
                                    enum: [men, women, unisex]
                                    required: true
                                productType:
                                    type: string
                                    enum:
                                        - twilljogger
                                        - shirredlegjogger
                                        - motoknitjogger
                                        - dropcrotchjogger
                                        - hiphopjogger
                                        - shadingblockjogger
                                        - chinojogger
                                        - handcuffedjogger
                                        - loosepocketjogger
                                        - splashcolorjogger
                                        - wooljogger,
                                        - distressedjogger
                                        - noncuffedjogger
                                    required: true
                                brand:
                                    type: string
                                    required: true
                                stock:
                                    type: number
                                    default: 0
                                size:
                                    type: string
                                    enum: [s, m, l, xl, xxl]
                                    required: true
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    product:
                                        type: object
                                        properties:
                                            _id:
                                                type: string
                                            name:
                                                type: string
                                            price:
                                                type: number
                                            description:
                                                type: string
                                            photos:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: string
                                                        secure_url:
                                                            type: string
                                            category:
                                                type: string
                                            productType:
                                                type: string
                                            brand:
                                                type: string
                                            stock:
                                                type: number
                                            size:
                                                type: string
                                            ratings:
                                                type: number
                                            numberOfReviews:
                                                type: number
                                            user:
                                                type: string
                                            reviews:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: string
                                                        comment:
                                                            type: string
                                                        user:
                                                            type: string
                                                        name:
                                                            type: string
                                                        rating:
                                                            type: number
                                            createdAt:
                                                type: date
                                            updatedAt:
                                                type: date
                                            __v:
                                                type: number

            400:
                description: Bad request
            500:
                description: Internal server error

    /admin/product/{id}:
        put:
            tags:
                - Admin
            summary: If admin, update the product. photos are optional to pass. Rest all body is set to be updated to what you pass here.
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - name
                                - price
                                - description
                                - category
                                - productType
                                - brand
                                - size
                                - photos
                            properties:
                                name:
                                    type: string
                                    required: true
                                price:
                                    type: number
                                    required: true
                                description:
                                    type: string
                                    required: true
                                photos:
                                    in: formData
                                    description: The uploaded photos
                                    type: file
                                    format: binary
                                category:
                                    type: string
                                    enum: [men, women, unisex]
                                    required: true
                                productType:
                                    type: string
                                    enum:
                                        - twilljogger
                                        - shirredlegjogger
                                        - motoknitjogger
                                        - dropcrotchjogger
                                        - hiphopjogger
                                        - shadingblockjogger
                                        - chinojogger
                                        - handcuffedjogger
                                        - loosepocketjogger
                                        - splashcolorjogger
                                        - wooljogger,
                                        - distressedjogger
                                        - noncuffedjogger
                                    required: true
                                brand:
                                    type: string
                                    required: true
                                stock:
                                    type: number
                                    default: 0
                                size:
                                    type: string
                                    enum: [s, m, l, xl, xxl]
                                    required: true
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    product:
                                        type: object
                                        properties:
                                            _id:
                                                type: string
                                            name:
                                                type: string
                                            price:
                                                type: number
                                            description:
                                                type: string
                                            photos:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: string
                                                        secure_url:
                                                            type: string
                                            category:
                                                type: string
                                            productType:
                                                type: string
                                            brand:
                                                type: string
                                            stock:
                                                type: number
                                            size:
                                                type: string
                                            ratings:
                                                type: number
                                            numberOfReviews:
                                                type: number
                                            user:
                                                type: string
                                            reviews:
                                                type: array
                                                items:
                                                    type: object
                                                    properties:
                                                        id:
                                                            type: string
                                                        comment:
                                                            type: string
                                                        user:
                                                            type: string
                                                        name:
                                                            type: string
                                                        rating:
                                                            type: number
                                            createdAt:
                                                type: date
                                            updatedAt:
                                                type: date
                                            __v:
                                                type: number

            400:
                description: Bad request
            500:
                description: Internal server error
        delete:
            tags:
                - Admin
            summary: If admin, pass the id of product and product will be removed
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                      type: string
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    message:
                                        type: string
            400:
                description: Bad request
            500:
                description: Internal server error

    /reviews:
        get:
            tags:
                - Product
            summary: A simple get request, will give you all reviews for given product
            parameters:
                - name: id
                  in: query
                  description: id of the product
                  required: true
                  schema:
                      type: string
            requestBody:
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    reviews:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                user:
                                                    type: string
                                                name:
                                                    type: string
                                                rating:
                                                    type: number
                                                comment:
                                                    type: string
                                                _id:
                                                    type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error

    /review:
        put:
            tags:
                - Product
            summary: A logged in user can post a review on any product. If review is already posted, it will just update the existing review
            parameters:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - rating
                                - comment
                                - productId
                            properties:
                                rating:
                                    type: number
                                    required: true
                                comment:
                                    type: string
                                    required: true
                                productId:
                                    type: string
                                    required: true
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    reviews:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                user:
                                                    type: string
                                                name:
                                                    type: string
                                                rating:
                                                    type: number
                                                comment:
                                                    type: string
                                                _id:
                                                    type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error
        delete:
            tags:
                - Product
            summary: Delete the review of logged in user on given product id.
            parameters:
                - name: productId
                  in: query
                  required: true
                  schema:
                      type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - rating
                                - comment
                                - productId
                            properties:
                                rating:
                                    type: number
                                    required: true
                                comment:
                                    type: string
                                    required: true
                                productId:
                                    type: string
                                    required: true
            responses:
                200:
                    description: All good success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    success:
                                        type: boolean
                                    reviews:
                                        type: array
                                        items:
                                            type: object
                                            properties:
                                                user:
                                                    type: string
                                                name:
                                                    type: string
                                                rating:
                                                    type: number
                                                comment:
                                                    type: string
                                                _id:
                                                    type: string
                400:
                    description: Bad request
                500:
                    description: Internal server error
